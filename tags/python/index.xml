<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on Go Buddy Go</title>
    <link>https://ecnedaced-seirots.github.io/tags/python/</link>
    <description>Recent content in python on Go Buddy Go</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Wed, 12 Jun 2024 22:26:58 +0900</lastBuildDate>
    <atom:link href="https://ecnedaced-seirots.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pythonのdatetime, zoneinfo周辺など</title>
      <link>https://ecnedaced-seirots.github.io/post/d/python-datetime-timezone/</link>
      <pubDate>Wed, 12 Jun 2024 22:26:58 +0900</pubDate>
      <guid>https://ecnedaced-seirots.github.io/post/d/python-datetime-timezone/</guid>
      <description>&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Pythonの時間の扱い、何度書いても忘れてしまう。そしてタイムゾーンの変換は、python3.9以降はzoneinfoが便利と最近知る。&lt;/p&gt;</description>
    </item>
    <item>
      <title>S3上のCSVをRDS(PostgreSQL)にインポートするLambda</title>
      <link>https://ecnedaced-seirots.github.io/post/d/s3-csv-import-to-rds-lambda/</link>
      <pubDate>Tue, 11 Jun 2024 22:24:49 +0900</pubDate>
      <guid>https://ecnedaced-seirots.github.io/post/d/s3-csv-import-to-rds-lambda/</guid>
      <description>&lt;p&gt; &lt;/p&gt;
&lt;p&gt;S3上のCSVファイルをRDS(PostgreSQL)にインポートするという「あるある」パターンのLambda。（Python3.9, エラー処理抜き）&lt;/p&gt;</description>
    </item>
    <item>
      <title>RDS(PostgreSQL)のデータをS3にエクスポートするLambda</title>
      <link>https://ecnedaced-seirots.github.io/post/d/rds-export-to-s3-lambda/</link>
      <pubDate>Tue, 11 Jun 2024 22:22:36 +0900</pubDate>
      <guid>https://ecnedaced-seirots.github.io/post/d/rds-export-to-s3-lambda/</guid>
      <description>&lt;p&gt; &lt;/p&gt;
&lt;p&gt;RDSのデータをS3にエクスポートするLambdaという「あるある」パターン。DBはPostgreSQL、Python3.9、エラー処理抜き。&lt;/p&gt;</description>
    </item>
    <item>
      <title>AWS Logs InsightsをCLIまたはPython(boto3)から実行</title>
      <link>https://ecnedaced-seirots.github.io/post/d/aws-logs-insights-boto3/</link>
      <pubDate>Wed, 15 May 2024 22:33:31 +0900</pubDate>
      <guid>https://ecnedaced-seirots.github.io/post/d/aws-logs-insights-boto3/</guid>
      <description>&lt;p&gt; &lt;/p&gt;
&lt;p&gt;CloudWatch Logs Insightsのクエリを、マネジメントコンソールからではなく、AWS CLI及びPython SDK(boto3)から投げてみる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>OpenCVで画像をリサイズして横に連結する</title>
      <link>https://ecnedaced-seirots.github.io/post/c/opencv-horizontal-join-resize/</link>
      <pubDate>Wed, 10 May 2023 23:13:19 +0900</pubDate>
      <guid>https://ecnedaced-seirots.github.io/post/c/opencv-horizontal-join-resize/</guid>
      <description>&lt;p&gt;前回投稿でやったOpenCV(Python)の画像連結を少し応用。高さが異なる画像をリサイズして結合させてみた。これもめっちゃ簡単にできて感動。&lt;/p&gt;</description>
    </item>
    <item>
      <title>OpenCVで画像を横に連結する</title>
      <link>https://ecnedaced-seirots.github.io/post/c/opencv-horizontal-join/</link>
      <pubDate>Sun, 07 May 2023 23:11:44 +0900</pubDate>
      <guid>https://ecnedaced-seirots.github.io/post/c/opencv-horizontal-join/</guid>
      <description>&lt;p&gt;画像を横に連結したい事情があり、OpenCVでできそうだなと軽く調べたら、すごく簡単にできた。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pythonで区切り文字の最後の要素を取得</title>
      <link>https://ecnedaced-seirots.github.io/post/b/python-get-last-string/</link>
      <pubDate>Wed, 16 Feb 2022 13:00:00 +0900</pubDate>
      <guid>https://ecnedaced-seirots.github.io/post/b/python-get-last-string/</guid>
      <description>&lt;p&gt;Pythonで、区切り文字の最後の要素を取得する。「要素」と言ってるのは、一旦リストにする必要があるため。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pythonの辞書・文字列変換とJSON処理</title>
      <link>https://ecnedaced-seirots.github.io/post/b/python-json-dumps-load/</link>
      <pubDate>Thu, 10 Feb 2022 18:00:00 +0900</pubDate>
      <guid>https://ecnedaced-seirots.github.io/post/b/python-json-dumps-load/</guid>
      <description>&lt;p&gt;Pythonの辞書・文字列変換と、JSON処理。必須項目でしょっちゅう使うくせに覚えられない&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>OpenCVで画像ファイルを保存する</title>
      <link>https://ecnedaced-seirots.github.io/post/b/python-opencv-2/</link>
      <pubDate>Sun, 06 Feb 2022 20:00:00 +0900</pubDate>
      <guid>https://ecnedaced-seirots.github.io/post/b/python-opencv-2/</guid>
      <description>&lt;p&gt;OpenCV(Python)で、グレースケールの出力と画像ファイルの保存をしてみる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go入門(9) - if else文</title>
      <link>https://ecnedaced-seirots.github.io/post/b/golang-init-if-2/</link>
      <pubDate>Sun, 30 Jan 2022 10:00:00 +0900</pubDate>
      <guid>https://ecnedaced-seirots.github.io/post/b/golang-init-if-2/</guid>
      <description>&lt;p&gt;Go言語におけるif-else文の覚書。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go入門(8) - if文の基本</title>
      <link>https://ecnedaced-seirots.github.io/post/b/golang-init-if/</link>
      <pubDate>Wed, 26 Jan 2022 23:00:00 +0900</pubDate>
      <guid>https://ecnedaced-seirots.github.io/post/b/golang-init-if/</guid>
      <description>&lt;p&gt;Go言語におけるif文の基本覚書。&lt;/p&gt;</description>
    </item>
    <item>
      <title>PythonでOpenCV始めてみる</title>
      <link>https://ecnedaced-seirots.github.io/post/b/python-opencv-1/</link>
      <pubDate>Tue, 25 Jan 2022 22:00:00 +0900</pubDate>
      <guid>https://ecnedaced-seirots.github.io/post/b/python-opencv-1/</guid>
      <description>&lt;p&gt;画像処理ライブラリのOpenCVをいじってみようと思った。OpenCVがやりたいというより、Python + 画像処理なら両方好きだからモチベーションを維持できそうと思ったのだ。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go入門(7) - mapのrange,deleteなど</title>
      <link>https://ecnedaced-seirots.github.io/post/b/golang-init-map-2/</link>
      <pubDate>Mon, 24 Jan 2022 21:00:00 +0900</pubDate>
      <guid>https://ecnedaced-seirots.github.io/post/b/golang-init-map-2/</guid>
      <description>&lt;p&gt;Goのmap操作続き。range, 追加やdeleteなど。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go入門(6) - mapの基本</title>
      <link>https://ecnedaced-seirots.github.io/post/b/golang-init-map/</link>
      <pubDate>Sat, 22 Jan 2022 14:00:00 +0900</pubDate>
      <guid>https://ecnedaced-seirots.github.io/post/b/golang-init-map/</guid>
      <description>&lt;p&gt;Goのmapはkey:valueの配列で構成されており、Pythonの辞書に似ている。ほぼ辞書と同等の使い方ができるようだが、若干挙動が異なる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go入門(5) - for文の基本</title>
      <link>https://ecnedaced-seirots.github.io/post/b/golang-init-for/</link>
      <pubDate>Mon, 17 Jan 2022 23:51:03 +0900</pubDate>
      <guid>https://ecnedaced-seirots.github.io/post/b/golang-init-for/</guid>
      <description>&lt;p&gt;Go言語におけるfor文の基本覚書。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go入門(3) - スライス(Slice)の扱い</title>
      <link>https://ecnedaced-seirots.github.io/post/b/golang-init-slice/</link>
      <pubDate>Sun, 16 Jan 2022 13:00:00 +0900</pubDate>
      <guid>https://ecnedaced-seirots.github.io/post/b/golang-init-slice/</guid>
      <description>&lt;p&gt;Goには配列と似た「スライス(Slice)」というデータ構造の概念がある。要素数の指定が不要で、配列より柔軟にデータを扱うことができる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pythonライブラリのローカルインストール方法</title>
      <link>https://ecnedaced-seirots.github.io/post/a/python-package-localinstall/</link>
      <pubDate>Thu, 30 Dec 2021 17:00:00 +0900</pubDate>
      <guid>https://ecnedaced-seirots.github.io/post/a/python-package-localinstall/</guid>
      <description>&lt;p&gt;Pythonライブラリをローカルインストールする必要に迫られて対応した記録。実行した環境はWindowsだが、Linuxでも同様らしい。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Terraformのtfvarsファイルを自動生成する</title>
      <link>https://ecnedaced-seirots.github.io/post/a/terraform_auto_create_tfvars/</link>
      <pubDate>Sun, 28 Nov 2021 17:00:00 +0900</pubDate>
      <guid>https://ecnedaced-seirots.github.io/post/a/terraform_auto_create_tfvars/</guid>
      <description>過去記事からの派生案件で、Terraformで使うtfvarsファイルについて、繰り返しデータを多数投入する想定のため、これを自動生成したいと考えた。
Terraform loop処理の超シンプルな例 Python - Jinja2テンプレートで連続データを処理したい
実際に使用するファイル群は過去記事に記載しているがこんな想定で。（もちろん実際は他にもいろいろ必要）自動生成したいのは、以下の*印をつけたcodecommit.auto.tfvarsである。（この時点では手動で値を記述したもの）
work_dir/ ├── codecommit.auto.tfvars * ├── codecommit.tf ├── config.tf ├── terraform.tfvars ├── variables.tf └── vpc.tf これとは別に、tfvars自動生成作業用ディレクトリの作業前はこの状態。以下3つのファイルを用意する。codecommit.tmplはテンプレートとなる。このファイル名はスクリプトから呼び出すので名称に注意。対象のAWSリソースによって変えるが、tfファイルの名称に合わせておけばよい。
script_dir/ ├── codecommit.tmpl ├── create_vars.py └── data.csv codecommit.tmpl
param{{ num }} = { repository_name = &amp;#34;{{ repo_name }}&amp;#34; description = &amp;#34;{{ des }}&amp;#34; } data.csv （今回の例ではヘッダーありの前提）
num,repo_name,des 1,&amp;#34;my-repo001&amp;#34;,&amp;#34;my-repo001の説明&amp;#34; 2,&amp;#34;my-repo002&amp;#34;,&amp;#34;my-repo002の説明&amp;#34; 3,&amp;#34;my-repo003&amp;#34;,&amp;#34;my-repo003の説明&amp;#34; create_vars.py
import sys import pandas as pd from jinja2 import Environment, FileSystemLoader def main(): # テンプレート読み込み env = Environment(loader=FileSystemLoader(&amp;#39;.</description>
    </item>
    <item>
      <title>Python - Jinja2テンプレートで連続データを処理したい</title>
      <link>https://ecnedaced-seirots.github.io/post/a/jinja2-python/</link>
      <pubDate>Wed, 24 Nov 2021 00:10:00 +0900</pubDate>
      <guid>https://ecnedaced-seirots.github.io/post/a/jinja2-python/</guid>
      <description>Jinja2テンプレートで連続データを処理したい。元データはCSVとかで。いや、Jinja2でなくてもいいかもしれないけど、ちょっと思いつかないな&amp;hellip;
とりあえず参考リンク。最初のリンクは、CSVをJSONに変換しているんだよな、CSVのままでやりたいんだけど。しかし例は分かりやすい。
【jinja2】テンプレートエンジンでデータの連続差し込み PythonのテンプレートエンジンJinja2を使ってみた </description>
    </item>
    <item>
      <title>MacにPython3を再インストール</title>
      <link>https://ecnedaced-seirots.github.io/post/a/mac-python3-re-install/</link>
      <pubDate>Sat, 30 Oct 2021 12:00:00 +0900</pubDate>
      <guid>https://ecnedaced-seirots.github.io/post/a/mac-python3-re-install/</guid>
      <description>Mac上のpython3。しばらく前にhomebrewと一緒に削除してしまったので入れ直した。
$ brew install python3 $ which python3 /usr/local/bin/python3 $ python3 -V Python 3.9.7 $ pip3 -V pip 21.2.4 from /usr/local/lib/python3.9/site-packages/pip (python 3.9) pythonだけで実行するとゴニョゴニョ言われる。
$ python Your PYTHONPATH points to a site-packages dir for Python 3.x but you are running Python 2.x! PYTHONPATH is currently: &amp;#34;/usr/local/lib/python3.9/site-packages:&amp;#34; You should `unset PYTHONPATH` to fix this. $ unset PYTHONPATH で、この後pythonを実行すると2系になってしまう。
$ python WARNING: Python 2.7 is not recommended. This version is included in macOS for compatibility with legacy software.</description>
    </item>
  </channel>
</rss>
